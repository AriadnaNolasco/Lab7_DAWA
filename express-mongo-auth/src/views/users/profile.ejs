<div class="container">
  <div class="section">
    <div class="row">
      <div class="col s12 m8 offset-m2">
        <div class="card z-depth-3" style="border-radius: 15px;">
          <div class="card-content center-align">
            <h4 class="blue-text text-darken-2" style="font-weight: 600; margin-bottom: 25px;">Mi Perfil</h4>

            <div class="center-align" style="margin-bottom: 20px;">
              <img id="profilePhoto" src="https://cdn-icons-png.flaticon.com/512/149/149071.png" alt="Avatar"
                class="circle responsive-img z-depth-2" style="width: 120px; height: 120px; object-fit: cover;">
            </div>

            <div id="profileData">
              <div class="progress" id="loadingBar">
                <div class="indeterminate"></div>
              </div>
            </div>
          </div>

          <div class="card-action center">
            <a id="editBtn" href="#" class="btn blue lighten-1 waves-effect waves-light">
              <i class="material-icons left">edit</i> Editar perfil
            </a>
            <a id="saveBtn" href="#" class="btn green lighten-1 waves-effect waves-light" style="display:none;">
              <i class="material-icons left">save</i> Guardar
            </a>
            <a id="backDashboard" href="#" class="btn grey darken-2 waves-effect waves-light">
              <i class="material-icons left">dashboard</i> Ir al Dashboard
            </a>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

<script>
  let userData = null;

  async function loadProfile() {
    const token = sessionStorage.getItem('token');
    if (!token) return window.location.href = '/signIn';

    try {
      const res = await fetch('/api/users/me', { headers: { Authorization: 'Bearer ' + token } });
      if (res.status === 401) return window.location.href = '/signIn';

      userData = await res.json();
      const profile = document.getElementById('profileData');
      document.getElementById('loadingBar').style.display = 'none';

      renderProfile(userData);

      // Configurar dashboard seg√∫n rol
      const btnDashboard = document.getElementById('backDashboard');
      btnDashboard.href = userData.roles.includes('admin') ? '/dashboard-admin' : '/dashboard-user';

    } catch (err) {
      console.error(err);
      M.toast({ html: 'Error al cargar perfil', classes: 'red' });
    }
  }

  function renderProfile(data) {
    document.getElementById('profileData').innerHTML = `
    <ul class="collection">
      <li class="collection-item"><b>Nombre:</b> ${data.name}</li>
      <li class="collection-item"><b>Apellido:</b> ${data.lastName || ''}</li>
      <li class="collection-item"><b>Correo:</b> ${data.email}</li>
      <li class="collection-item"><b>Tel√©fono:</b> ${data.phoneNumber || 'No registrado'}</li>
      <li class="collection-item"><b>Fecha de nacimiento:</b> ${data.birthdate ? new Date(data.birthdate).toLocaleDateString() : 'No registrada'
      }</li>
      <li class="collection-item"><b>Roles:</b> ${data.roles.join(', ')}</li>
    </ul>
  `;
  }

  // üß© Cambiar a modo edici√≥n
  document.getElementById('editBtn').addEventListener('click', () => {
    const data = userData;
    const profile = document.getElementById('profileData');
    document.getElementById('editBtn').style.display = 'none';
    document.getElementById('saveBtn').style.display = 'inline-block';

    profile.innerHTML = `
    <div class="input-field">
      <input id="editName" type="text" value="${data.name}" required>
      <label for="editName" class="active">Nombre</label>
    </div>
    <div class="input-field">
      <input id="editLastName" type="text" value="${data.lastName || ''}" required>
      <label for="editLastName" class="active">Apellido</label>
    </div>
    <div class="input-field">
      <input id="editPhone" type="text" value="${data.phoneNumber || ''}">
      <label for="editPhone" class="active">Tel√©fono</label>
    </div>
    <div class="input-field">
      <input id="editBirthdate" type="date" value="${data.birthdate ? new Date(data.birthdate).toISOString().split('T')[0] : ''
      }">
      <label for="editBirthdate" class="active">Fecha de nacimiento</label>
    </div>
  `;
  });

  // üß© Guardar cambios
  document.getElementById('saveBtn').addEventListener('click', async () => {
    const token = sessionStorage.getItem('token');
    const updated = {
      name: document.getElementById('editName').value,
      lastName: document.getElementById('editLastName').value,
      phoneNumber: document.getElementById('editPhone').value,
      birthdate: document.getElementById('editBirthdate').value
    };

    const res = await fetch('/api/users/me', {
      method: 'PUT',
      headers: {
        'Content-Type': 'application/json',
        Authorization: 'Bearer ' + token
      },
      body: JSON.stringify(updated)
    });

    if (res.ok) {
      M.toast({ html: 'Perfil actualizado', classes: 'green' });
      document.getElementById('editBtn').style.display = 'inline-block';
      document.getElementById('saveBtn').style.display = 'none';
      loadProfile(); // recargar datos
    } else {
      const data = await res.json();
      M.toast({ html: data.message || 'Error al guardar', classes: 'red' });
    }
  });

  loadProfile();
</script>